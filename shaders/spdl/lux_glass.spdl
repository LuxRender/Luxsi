#######################################################################
# This file is part of LuXSI;
# LuXSI is a LuxRender Exporter for Autodesk(C) Softimage(C) ( ex-XSI )
# (http://www.luxrender.org)
#
# Copyright(C) 2007 - 2012  of all Authors:
# Michael Gangolf, 'miga', mailto:miga@migaweb.de
# Pedro Alcaide, 'povmaniaco', mailto:p.alcaide@hotmail.com
#
# LuXSI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# LuXSI is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty 
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LuXSI.  If not, see <http://www.gnu.org/licenses/>.
#
#######################################################################

# SPDL Generated by XSI Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{09CD8D65-20F3-11DD-B0DE-0016CB9FB47D}";
PropertySet "lux_glass_pset"
{
    Parameter "out" output
    {
        GUID = "{09CD8D66-20F3-11DD-B0DE-0016CB9FB47D}";
        Type = color;
    }
    Parameter "Kr" input
    {
        GUID = "{09CD8D67-20F3-11DD-B0DE-0016CB9FB47D}";
        Type = color;
        Texturable = on;
        Value = 0.8 0.8 0.8 0.0;
    }
    Parameter "Kt" input
    {
        GUID = "{09CD8D68-20F3-11DD-B0DE-0016CB9FB47D}";
        Type = color;
        Texturable = on;
        Value = 0.8 0.8 0.8 0.0;
    }
	Parameter "film" input
    {
        GUID = "{43AE2A2F-97DC-47FF-B4D5-30B0FC7AB149}";
        Type = scalar;
        Value = 0.00;
        Value Minimum = 0.0;
        Value Maximum = 5.0;
    }
	Parameter "filmindex" input
    {
        GUID = "{B7997874-35ED-4F1A-9D30-D5C96EBF9688}";
        Type = scalar;
        Value = 0.00;
        Value Minimum = 0.0;
        Value Maximum = 5.0;
    }
    Parameter "index" input
    {
        GUID = "{09CD8D69-20F3-11DD-B0DE-0016CB9FB47D}";
        Type = scalar;
        Value = 1.5;
        Value Minimum = 0.0;
        Value Maximum = 5.0;
    }
    Parameter "cauchyb" input
    {
        GUID = "{09CD8D6A-20F3-11DD-B0DE-0016CB9FB47D}";
        Type = scalar;
        Value = 0.0;
        Value Minimum = 0.0;
        Value Maximum = 1.0;
    }

    Parameter "architectural" input
        {
            GUID = "{09CD8D6B-20F3-11DD-B0DE-0016CB9FB47D}";
            Type = boolean;
            Flags = 1;
            Value = 0;
        }
}

MetaShader "lux_glass_meta"
{
    Name = "LuxRender Glass Shader";
    Type = material, shadow, material photon;
    Renderer "mental ray"
    {
        Name = "lux_glass";
        FileName = "lux_glass";
        Options
        {
            "version" = 1;
        }
    }
}

Defaults
{
    Kr
    {
        Name = "Reflection";
        UIType = "rgb";
        Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
    }
    Kt
    {
        Name = "Transmission";
        UIType = "rgb";
        Commands = "{F5C75F11-2F05-11D3-AA95-00AA0068D2C0}";
    }
    film
    {
        Name = "Thin film";
    }
	filmindex
    {
        Name = "Film IOR";
    }
	index
    {
        Name = "IOR";
    }
    cauchyb
    {
        Name = "Cauchy B";
    }
    architectural
    {
        Name = "Architectural";
    }
}

Layout "Default"
{
    Kr;
    Kt;
	film;
	filmindex;
    index;
    cauchyb;
    architectural;
}

Plugin = Shader
{
    FileName = "lux_glass";
}

#######################################################################
# This file is part of LuXSI;
# LuXSI is a LuxRender Exporter for Autodesk(C) Softimage(C) ( ex-XSI )
# (http://www.luxrender.org)
#
# Copyright(C) 2007 - 2012  of all Authors:
# Michael Gangolf, 'miga', mailto:miga@migaweb.de
# Pedro Alcaide, 'povmaniaco', mailto:p.alcaide@hotmail.com
#
# LuXSI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 3 of the License,
# or (at your option) any later version.
#
# LuXSI is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with LuXSI.  If not, see <http://www.gnu.org/licenses/>.
#
#######################################################################

# SPDL Generated by Softimage Shader Wizard
SPDL
Version = "2.0.0.0";
Reference = "{5AF1D45C-50DA-4AFB-AEC0-4A017EE66293}";
PropertySet "lux_camera_dof_pset"
{
	Parameter "out" output
	{
		GUID = "{7F939991-64F3-4C6B-9892-C29FD265A809}";
		Type = color;
	}
	Parameter "object_dof" input
	{
		GUID = "{C39C5FAF-E3C7-4FF1-84CF-05F43D35DB59}";
		Type = integer;
	}
	Parameter "distance" input
	{
		GUID = "{2C5D9921-7595-4211-85F0-25BB07E62F05}";
		ui "mapping" = "{CFFD0AC5-44D3-4e10-BA43-F6D58B1E6637}";// C3DCamera 'interestdist'
		Type = scalar;
		Value = 0.0;
	}
	Parameter "autofocus" input
	{
		GUID = "{84708989-119D-4F4A-B74B-531B61D5AA25}";
		Type = boolean;
		Value = off;
	}
	Parameter "blades" input
	{
		GUID = "{B2C7EF37-4F1E-4560-9053-50CCE90E82D7}";
		Type = integer;
	}
	Parameter "distribution" input
	{
		GUID = "{0052D701-8D84-4D56-83F8-969645BB2507}";
		Type = integer;
	}
	Parameter "power" input
	{
		GUID = "{3ED574D3-D5A1-40B3-826A-E62F19881FD2}";
		Type = integer;
		Value = 1;
	}
	Parameter "lensradius" input
	{
		GUID = "{33D574D3-D5A1-40B3-826A-E62F19881FD2}";
		Type = scalar;
		Value = 0.01;
	}
}

MetaShader "lux_camera_dof_meta"
{
	Name = "LuxRender Camera DoF";
	Type = lens;
	Renderer "mental ray"
	{
		Name = "lux_camera_dof";
		FileName = "lux_camera_dof";
		Options
		{
			"version" = 1;
		}
	}
}

Defaults
{
	object_dof
	{
		Name = "Object";
	}
	lensradius
	{
		Name = "Lens Radius";
		UIRange = 0.01 to 1.0 by 0.01;
	}
	distance
	{
		Name = "Distance";
	}
	autofocus
	{
		Name = "Auto focus";
		UIType = "boolean";
	}
	distribution
	{
		Name = "Distribution";
		UIType = "combo";
		Items
		{
			"Uniform"               = 0,
			"Gaussian"              = 1,
			"Inverse gaussian"      = 2,
			"Exponential"           = 3,
			"Inverse exponential"   = 4,
		}
	}
	blades
	{
		Name = "Blades";
		UIRange = 0 to 6 by 1;
	}
	power
	{
		Name = "Power";
		UIRange = 0 to 10 by 1;
	}
}

Layout "Default"
{
	Group, ShowFrame
	{
        #object_dof;
		lensradius;
		distance;

		distribution;
		power;
		Row
		{
			autofocus;
			blades;
		}
	}
}

Plugin = Shader
{
	FileName = "lux_camera_dof";
}
